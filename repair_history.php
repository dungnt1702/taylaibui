<?php
// File n√†y s·∫Ω ƒë∆∞·ª£c include v√†o index.php khi filter=repair
// Kh√¥ng c·∫ßn HTML head/body tags

// Ki·ªÉm tra xem c√≥ k·∫øt n·ªëi database kh√¥ng
if (!isset($mysqli)) {
    echo '<p class="error">L·ªói: Kh√¥ng c√≥ k·∫øt n·ªëi database</p>';
    return;
}

// L·∫•y to√†n b·ªô d·ªØ li·ªáu s·ª≠a ch·ªØa t·ª´ b·∫£ng repair_history
$query = "
    SELECT 
        rh.id,
        rh.vehicle_id,
        rh.repair_type,
        rh.description,
        rh.cost,
        rh.repair_date,
        rh.completed_date,
        rh.status,
        rh.technician,
        rh.created_at,
        u.name as created_by
    FROM repair_history rh
    LEFT JOIN users u ON rh.user_id = u.id
    ORDER BY rh.repair_date DESC, rh.created_at DESC
";

$result = $mysqli->query($query);
if (!$result) {
    echo '<p class="error">L·ªói SQL: ' . $mysqli->error . '</p>';
    return;
}

$repairs = [];
while ($row = $result->fetch_assoc()) {
    $repairs[] = $row;
}

// Debug: hi·ªÉn th·ªã s·ªë l∆∞·ª£ng b·∫£n ghi
// echo '<p>Debug: T√¨m th·∫•y ' . count($repairs) . ' b·∫£n ghi s·ª≠a ch·ªØa</p>';
?>

<div class="repair-container">
    <!-- Ti√™u ƒë·ªÅ s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã b·ªüi JavaScript updatePageTitle() -->
    
    <div class="repair-actions">
        <button class="btn-primary" onclick="showAddRepairModal()">‚ûï Th√™m s·ª≠a ch·ªØa m·ªõi</button>
        <button class="btn-secondary" onclick="exportRepairHistory()">üìä Xu·∫•t b√°o c√°o</button>
    </div>
    
    <!-- Ph√¢n trang controls -->
    <div class="pagination-controls">
        <div class="pagination-info">
            <span>Hi·ªÉn th·ªã </span>
            <select id="page-size" onchange="changePageSize()">
                <option value="10">10</option>
                <option value="20">20</option>
                <option value="30">30</option>
            </select>
            <span> d√≤ng m·ªói trang</span>
        </div>
        <div class="pagination-nav">
            <button id="prev-page" onclick="previousPage()" disabled>‚Üê Tr∆∞·ªõc</button>
            <span id="page-info">Trang 1</span>
            <button id="next-page" onclick="nextPage()">Ti·∫øp ‚Üí</button>
        </div>
    </div>
    
    <!-- Container ri√™ng cho b·∫£ng c√≥ th·ªÉ scroll ngang -->
    <div class="table-container">
        <table class="repair-table">
        <thead>
            <tr>
                <th>Th·ª© t·ª±</th>
                <th>Xe</th>
                <th>Lo·∫°i s·ª≠a ch·ªØa</th>
                <th>M√¥ t·∫£</th>
                <th>Chi ph√≠</th>
                <th>Ng√†y s·ª≠a</th>
                <th>Ng√†y ho√†n th√†nh</th>
                <th>Tr·∫°ng th√°i</th>
                <th>Th·ª£ s·ª≠a</th>
                <th>Ng∆∞·ªùi t·∫°o</th>
                <th>Ng√†y t·∫°o</th>
                <th>Thao t√°c</th>
            </tr>
        </thead>
        <tbody>
            <?php if (empty($repairs)): ?>
                <tr>
                    <td colspan="12" class="no-data-row">
                        <p class="no-data">Ch∆∞a c√≥ d·ªØ li·ªáu s·ª≠a ch·ªØa n√†o.</p>
                    </td>
                </tr>
            <?php else: ?>
                <?php 
                $counter = 1;
                foreach ($repairs as $repair): 
                ?>
                    <tr>
                        <td data-label="Th·ª© t·ª±:"><?= $counter ?></td>
                        <td data-label="Xe:"><strong>Xe <?= htmlspecialchars($repair['vehicle_id']) ?></strong></td>
                        <td data-label="Lo·∫°i s·ª≠a ch·ªØa:">
                            <span class="repair-type"><?= htmlspecialchars($repair['repair_type']) ?></span>
                        </td>
                        <td data-label="M√¥ t·∫£:">
                            <div class="repair-description" title="<?= htmlspecialchars($repair['description']) ?>">
                                <?= htmlspecialchars(substr($repair['description'], 0, 50)) ?>
                                <?= strlen($repair['description']) > 50 ? '...' : '' ?>
                            </div>
                        </td>
                        <td data-label="Chi ph√≠:">
                            <?php if ($repair['cost'] > 0): ?>
                                <span class="repair-cost"><?= number_format($repair['cost'], 0, ',', '.') ?> VNƒê</span>
                            <?php else: ?>
                                <span class="no-data">-</span>
                            <?php endif; ?>
                        </td>
                        <td data-label="Ng√†y s·ª≠a:"><?= date('d/m/Y', strtotime($repair['repair_date'])) ?></td>
                        <td data-label="Ng√†y ho√†n th√†nh:">
                            <?php if ($repair['completed_date']): ?>
                                <?= date('d/m/Y', strtotime($repair['completed_date'])) ?>
                            <?php else: ?>
                                <span class="no-data">-</span>
                            <?php endif; ?>
                        </td>
                        <td data-label="Tr·∫°ng th√°i:">
                            <?php
                            $statusClass = 'status-' . $repair['status'];
                            $statusText = [
                                'pending' => 'Ch·ªù x·ª≠ l√Ω',
                                'in_progress' => 'ƒêang s·ª≠a',
                                'completed' => 'Ho√†n th√†nh',
                                'cancelled' => 'ƒê√£ h·ªßy'
                            ][$repair['status']] ?? $repair['status'];
                            ?>
                            <span class="status-badge <?= $statusClass ?>"><?= $statusText ?></span>
                        </td>
                        <td data-label="Th·ª£ s·ª≠a:">
                            <?php if ($repair['technician']): ?>
                                <span class="technician"><?= htmlspecialchars($repair['technician']) ?></span>
                            <?php else: ?>
                                <span class="no-data">-</span>
                            <?php endif; ?>
                        </td>
                        <td data-label="Ng∆∞·ªùi t·∫°o:"><?= htmlspecialchars($repair['created_by'] ?? 'N/A') ?></td>
                        <td data-label="Ng√†y t·∫°o:"><?= date('d/m/Y H:i', strtotime($repair['created_at'])) ?></td>
                        <td data-label="Thao t√°c:">
                            <button class="edit-btn" onclick="editRepair(<?= $repair['id'] ?>)">
                                ‚úèÔ∏è S·ª≠a
                            </button>
                            <button class="delete-btn" onclick="deleteRepair(<?= $repair['id'] ?>)">
                                üóëÔ∏è X√≥a
                            </button>
                        </td>
                    </tr>
                <?php 
                $counter++;
                endforeach; 
                ?>
            <?php endif; ?>
        </tbody>
        </table>
    </div>
</div>

<!-- Modal th√™m/s·ª≠a s·ª≠a ch·ªØa -->
<div id="repair-modal" class="modal" style="display: none;">
    <div class="modal-content" style="max-width: 700px;">
        <span class="close" onclick="closeRepairModal()">&times;</span>
        <h2 id="repair-modal-title">‚ûï Th√™m s·ª≠a ch·ªØa m·ªõi</h2>
        
        <form id="repair-form">
            <input type="hidden" id="repair-id" name="repair_id">
            <div class="form-row">
                <div class="form-group">
                    <label for="vehicle-select">Ch·ªçn xe:</label>
                    <select id="vehicle-select" name="vehicle_id" required>
                        <option value="">-- Ch·ªçn xe --</option>
                        <?php for ($i = 1; $i <= 20; $i++): ?>
                            <option value="<?= $i ?>">Xe <?= $i ?></option>
                        <?php endfor; ?>
                    </select>
                </div>
                <div class="form-group">
                    <label for="repair-type">Lo·∫°i s·ª≠a ch·ªØa:</label>
                    <input type="text" id="repair-type" name="repair_type" required placeholder="V√≠ d·ª•: Thay d·∫ßu, S·ª≠a m√°y...">
                </div>
            </div>
            
            <div class="form-group">
                <label for="repair-description">M√¥ t·∫£ chi ti·∫øt:</label>
                <textarea id="repair-description" name="description" rows="4" placeholder="M√¥ t·∫£ chi ti·∫øt c√¥ng vi·ªác s·ª≠a ch·ªØa..."></textarea>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="repair-date">Ng√†y s·ª≠a ch·ªØa:</label>
                    <input type="date" id="repair-date" name="repair_date" required value="<?= date('Y-m-d') ?>">
                </div>
                <div class="form-group">
                    <label for="repair-cost">Chi ph√≠ (VNƒê):</label>
                    <input type="number" id="repair-cost" name="cost" placeholder="0" min="0" step="1000">
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="technician">Th·ª£ s·ª≠a ch·ªØa:</label>
                    <input type="text" id="technician" name="technician" placeholder="T√™n th·ª£ s·ª≠a ch·ªØa">
                </div>
                <div class="form-group">
                    <label for="repair-status">Tr·∫°ng th√°i:</label>
                    <select id="repair-status" name="status" required>
                        <option value="pending">Ch·ªù x·ª≠ l√Ω</option>
                        <option value="in_progress">ƒêang s·ª≠a</option>
                        <option value="completed">Ho√†n th√†nh</option>
                        <option value="cancelled">ƒê√£ h·ªßy</option>
                    </select>
                </div>
            </div>
            
            <div class="form-actions">
                <button type="submit" class="btn-primary" id="repair-submit-btn">L∆∞u s·ª≠a ch·ªØa</button>
                <button type="button" class="btn-secondary" onclick="closeRepairModal()">H·ªßy</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal l·ªãch s·ª≠ s·ª≠a ch·ªØa -->
<div id="repair-history-modal" class="modal" style="display: none;">
    <div class="modal-content" style="max-width: 900px;">
        <span class="close" onclick="closeRepairHistoryModal()">&times;</span>
        <h2>üìñ L·ªãch s·ª≠ s·ª≠a ch·ªØa xe <span id="repair-vehicle-title"></span></h2>
        
        <div id="repair-history-content">
            <!-- N·ªôi dung l·ªãch s·ª≠ s·∫Ω ƒë∆∞·ª£c load ·ªü ƒë√¢y -->
        </div>
    </div>
</div>

<!-- Modal x√°c nh·∫≠n x√≥a -->
<div id="delete-confirm-modal" class="modal" style="display: none;">
    <div class="modal-content" style="max-width: 400px;">
        <span class="close" onclick="closeDeleteConfirmModal()">&times;</span>
        <h2>üóëÔ∏è X√°c nh·∫≠n x√≥a</h2>
        <p>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·ª≠a ch·ªØa n√†y?</p>
        <p><strong>H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!</strong></p>
        
        <div class="form-actions">
            <button type="button" class="btn-danger" id="delete-confirm-btn">X√≥a</button>
            <button type="button" class="btn-secondary" onclick="closeDeleteConfirmModal()">H·ªßy</button>
        </div>
    </div>
</div>

<!-- Modal th√¥ng b√°o -->
<div id="message-modal" class="modal" style="display: none;">
    <div class="modal-content" style="max-width: 400px;">
        <span class="close" onclick="closeMessageModal()">&times;</span>
        <div class="message-content">
            <div id="message-icon" class="message-icon"></div>
            <p id="message-text"></p>
        </div>
        
        <div class="form-actions">
            <button type="button" class="btn-primary" onclick="closeMessageModal()">ƒê√≥ng</button>
        </div>
    </div>
</div>

<script>
    function showAddRepairModal() {
        // Reset form v√† set mode th√™m m·ªõi
        document.getElementById('repair-form').reset();
        document.getElementById('repair-modal-title').textContent = '‚ûï Th√™m s·ª≠a ch·ªØa m·ªõi';
        document.getElementById('repair-submit-btn').textContent = 'L∆∞u s·ª≠a ch·ªØa';
        document.getElementById('repair-id').value = '';
        document.getElementById('repair-modal').style.display = 'block';
    }
    
    function closeRepairModal() {
        document.getElementById('repair-modal').style.display = 'none';
        document.getElementById('repair-form').reset();
    }
    
    function showRepairHistory(vehicleId) {
        document.getElementById('repair-vehicle-title').textContent = 'Xe ' + vehicleId;
        
        // Load l·ªãch s·ª≠ s·ª≠a ch·ªØa
        fetch('get_repair_history.php?vehicle_id=' + vehicleId)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('repair-history-content').innerHTML = data.html;
                    document.getElementById('repair-history-modal').style.display = 'block';
                } else {
                    showErrorModal('L·ªói: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showErrorModal('C√≥ l·ªói x·∫£y ra khi t·∫£i l·ªãch s·ª≠');
            });
    }
    
    function closeRepairHistoryModal() {
        document.getElementById('repair-history-modal').style.display = 'none';
    }
    
    function editRepair(repairId) {
        // Load th√¥ng tin s·ª≠a ch·ªØa ƒë·ªÉ s·ª≠a
        fetch('get_repair_by_id.php?id=' + repairId)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const repair = data.repair;
                    
                    // Fill form v·ªõi d·ªØ li·ªáu hi·ªán t·∫°i
                    document.getElementById('repair-id').value = repair.id;
                    document.getElementById('vehicle-select').value = repair.vehicle_id;
                    document.getElementById('repair-type').value = repair.repair_type;
                    document.getElementById('repair-description').value = repair.description;
                    document.getElementById('repair-cost').value = repair.cost;
                    document.getElementById('repair-date').value = repair.repair_date;
                    document.getElementById('technician').value = repair.technician || '';
                    document.getElementById('repair-status').value = repair.status;
                    
                    // Set mode s·ª≠a
                    document.getElementById('repair-modal-title').textContent = '‚úèÔ∏è S·ª≠a s·ª≠a ch·ªØa';
                    document.getElementById('repair-submit-btn').textContent = 'C·∫≠p nh·∫≠t s·ª≠a ch·ªØa';
                    
                    // Hi·ªÉn th·ªã modal
                    document.getElementById('repair-modal').style.display = 'block';
                } else {
                    showErrorModal('L·ªói: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showErrorModal('C√≥ l·ªói x·∫£y ra khi t·∫£i th√¥ng tin s·ª≠a ch·ªØa');
            });
    }
    
    function deleteRepair(repairId) {
        // Hi·ªÉn th·ªã modal x√°c nh·∫≠n x√≥a
        showDeleteConfirmModal(repairId);
    }
    
    function showDeleteConfirmModal(repairId) {
        const modal = document.getElementById('delete-confirm-modal');
        const confirmBtn = document.getElementById('delete-confirm-btn');
        
        // Set repair ID cho button x√°c nh·∫≠n
        confirmBtn.onclick = function() {
            performDeleteRepair(repairId);
        };
        
        modal.style.display = 'block';
    }
    
    function performDeleteRepair(repairId) {
        const formData = new FormData();
        formData.append('repair_id', repairId);
        
        fetch('delete_repair_record.php', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showSuccessModal('ƒê√£ x√≥a s·ª≠a ch·ªØa th√†nh c√¥ng!');
                closeDeleteConfirmModal();
                // Thay v√¨ reload trang, ch·ªâ c·∫≠p nh·∫≠t d·ªØ li·ªáu
                loadRepairData();
            } else {
                showErrorModal('L·ªói: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showErrorModal('C√≥ l·ªói x·∫£y ra khi x√≥a s·ª≠a ch·ªØa');
        });
    }
    
    function closeDeleteConfirmModal() {
        document.getElementById('delete-confirm-modal').style.display = 'none';
    }
    
    function showSuccessModal(message) {
        const modal = document.getElementById('message-modal');
        const messageText = document.getElementById('message-text');
        const messageIcon = document.getElementById('message-icon');
        
        messageText.textContent = message;
        messageIcon.textContent = '‚úÖ';
        messageIcon.className = 'message-icon success';
        
        modal.style.display = 'block';
        
        // T·ª± ƒë·ªông ƒë√≥ng sau 3 gi√¢y
        setTimeout(() => {
            modal.style.display = 'none';
        }, 3000);
    }
    
    function showErrorModal(message) {
        const modal = document.getElementById('message-modal');
        const messageText = document.getElementById('message-text');
        const messageIcon = document.getElementById('message-icon');
        
        messageText.textContent = message;
        messageIcon.textContent = '‚ùå';
        messageIcon.className = 'message-icon error';
        
        modal.style.display = 'block';
        
        // T·ª± ƒë·ªông ƒë√≥ng sau 5 gi√¢y
        setTimeout(() => {
            modal.style.display = 'none';
        }, 5000);
    }
    
    function closeMessageModal() {
        document.getElementById('message-modal').style.display = 'none';
    }
    
    // Ph√¢n trang
    let currentPage = 1;
    let pageSize = 10;
    let allRepairData = [];
    
    function changePageSize() {
        pageSize = parseInt(document.getElementById('page-size').value);
        currentPage = 1;
        renderPagination();
        renderRepairTable();
    }
    
    function previousPage() {
        if (currentPage > 1) {
            currentPage--;
            renderPagination();
            renderRepairTable();
        }
    }
    
    function nextPage() {
        const totalPages = Math.ceil(allRepairData.length / pageSize);
        if (currentPage < totalPages) {
            currentPage++;
            renderPagination();
            renderRepairTable();
        }
    }
    
    function renderPagination() {
        const totalPages = Math.ceil(allRepairData.length / pageSize);
        const pageInfo = document.getElementById('page-info');
        const prevBtn = document.getElementById('prev-page');
        const nextBtn = document.getElementById('next-page');
        
        pageInfo.textContent = `Trang ${currentPage} / ${totalPages}`;
        prevBtn.disabled = currentPage <= 1;
        nextBtn.disabled = currentPage >= totalPages;
    }
    
    function renderRepairTable() {
        const startIndex = (currentPage - 1) * pageSize;
        const endIndex = startIndex + pageSize;
        const pageData = allRepairData.slice(startIndex, endIndex);
        
        const tbody = document.querySelector('.repair-table tbody');
        if (!tbody) return;
        
        tbody.innerHTML = '';
        
        if (pageData.length === 0) {
            const row = tbody.insertRow();
            row.className = 'no-data-row';
            const cell = row.insertCell();
            cell.colSpan = 12; /* 12 c·ªôt: Th·ª© t·ª±, Xe, Lo·∫°i, M√¥ t·∫£, Chi ph√≠, Ng√†y s·ª≠a, Ng√†y ho√†n th√†nh, Tr·∫°ng th√°i, Th·ª£ s·ª≠a, Ng∆∞·ªùi t·∫°o, Ng√†y t·∫°o, Thao t√°c */
            cell.innerHTML = '<div class="no-data">Kh√¥ng c√≥ d·ªØ li·ªáu s·ª≠a ch·ªØa</div>';
            return;
        }
        
        pageData.forEach((repair, index) => {
            const row = tbody.insertRow();
            const counter = startIndex + index + 1;
            row.innerHTML = `
                <td data-label="Th·ª© t·ª±:">${counter}</td>
                <td data-label="Xe:"><strong>Xe ${repair.vehicle_id}</strong></td>
                <td data-label="Lo·∫°i s·ª≠a ch·ªØa:">
                    <span class="repair-type">${repair.repair_type}</span>
                </td>
                <td data-label="M√¥ t·∫£:">
                    <div class="repair-description" title="${repair.description || ''}">
                        ${repair.description ? (repair.description.length > 50 ? repair.description.substring(0, 50) + '...' : repair.description) : '-'}
                    </div>
                </td>
                <td data-label="Chi ph√≠:">
                    ${repair.cost > 0 ? repair.cost.toLocaleString('vi-VN') + ' VNƒê' : '-'}
                </td>
                <td data-label="Ng√†y s·ª≠a:">${repair.repair_date}</td>
                <td data-label="Ng√†y ho√†n th√†nh:">${repair.completed_date || '-'}</td>
                <td data-label="Tr·∫°ng th√°i:">
                    <span class="status-badge status-${repair.status}">${getStatusText(repair.status)}</span>
                </td>
                <td data-label="Th·ª£ s·ª≠a:">${repair.technician || '-'}</td>
                <td data-label="Ng∆∞·ªùi t·∫°o:">${repair.created_by || 'N/A'}</td>
                <td data-label="Ng√†y t·∫°o:">${repair.created_at}</td>
                <td data-label="Thao t√°c:">
                    <button class="edit-btn" onclick="editRepair(${repair.id})">
                        ‚úèÔ∏è S·ª≠a
                    </button>
                    <button class="delete-btn" onclick="deleteRepair(${repair.id})">
                        üóëÔ∏è X√≥a
                    </button>
                </td>
            `;
        });
    }
    
    function getStatusText(status) {
        const statusMap = {
            'pending': 'Ch·ªù x·ª≠ l√Ω',
            'in_progress': 'ƒêang s·ª≠a',
            'completed': 'Ho√†n th√†nh',
            'cancelled': 'ƒê√£ h·ªßy'
        };
        return statusMap[status] || status;
    }
    
    // Load d·ªØ li·ªáu ban ƒë·∫ßu
    function loadRepairData() {
        // Gi·∫£ l·∫≠p d·ªØ li·ªáu - trong th·ª±c t·∫ø s·∫Ω g·ªçi API
        fetch('get_all_repairs.php')
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    allRepairData = data.repairs;
                    renderPagination();
                    renderRepairTable();
                }
            })
            .catch(error => {
                console.error('Error loading repair data:', error);
            });
    }
    
    // Kh·ªüi t·∫°o ph√¢n trang khi trang load
    document.addEventListener('DOMContentLoaded', function() {
        // Set page size m·∫∑c ƒë·ªãnh
        document.getElementById('page-size').value = '10';
        
        // Ch·ªâ load d·ªØ li·ªáu n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu PHP
        const tbody = document.querySelector('.repair-table tbody');
        if (tbody && tbody.children.length <= 1) {
            loadRepairData();
        }
    });
    
    function exportRepairHistory() {
        // TODO: Implement export functionality
        showErrorModal('T√≠nh nƒÉng xu·∫•t b√°o c√°o s·∫Ω ƒë∆∞·ª£c ph√°t tri·ªÉn sau');
    }
    
    // X·ª≠ l√Ω form th√™m/s·ª≠a s·ª≠a ch·ªØa
    document.getElementById('repair-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const repairId = document.getElementById('repair-id').value;
        
        // X√°c ƒë·ªãnh endpoint d·ª±a tr√™n mode (th√™m m·ªõi ho·∫∑c s·ª≠a)
        const endpoint = repairId ? 'update_repair_record.php' : 'add_repair_record.php';
        
        fetch(endpoint, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const message = repairId ? 'ƒê√£ c·∫≠p nh·∫≠t s·ª≠a ch·ªØa th√†nh c√¥ng!' : 'ƒê√£ th√™m s·ª≠a ch·ªØa m·ªõi th√†nh c√¥ng!';
                showSuccessModal(message);
                closeRepairModal();
                // Thay v√¨ reload trang, ch·ªâ c·∫≠p nh·∫≠t d·ªØ li·ªáu
                loadRepairData();
            } else {
                showErrorModal('L·ªói: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showErrorModal('C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω s·ª≠a ch·ªØa');
        });
    });
    
    // ƒê√≥ng modal khi click ra ngo√†i
    window.onclick = function(event) {
        const repairModal = document.getElementById('repair-modal');
        const historyModal = document.getElementById('repair-history-modal');
        const deleteModal = document.getElementById('delete-confirm-modal');
        const messageModal = document.getElementById('message-modal');
        
        if (event.target == repairModal) {
            closeRepairModal();
        }
        if (event.target == historyModal) {
            closeRepairHistoryModal();
        }
        if (event.target == deleteModal) {
            closeDeleteConfirmModal();
        }
        if (event.target == messageModal) {
            closeMessageModal();
        }
    }
</script>
